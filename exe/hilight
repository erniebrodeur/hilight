#!/usr/bin/env ruby

require 'json'
require "hilight"
require 'open3'
require 'optparse'

include Hilight #rubocop:disable all

### Parsing
options = {}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: hilight <cmd>"

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end
end

def split_opts(array)
  cmd_start_index = array.find_index { |e| !e.start_with? "-" }
  return [[], array] if !cmd_start_index || cmd_start_index.zero?

  [array[0..cmd_start_index - 1], array[cmd_start_index..-1]]
end

arguments, cmd = split_opts ARGV
parser.parse arguments

fabrics = Hilight::Quilts.constants.map { |c| Hilight::Quilts.const_get c }

### Execution
if cmd.any?
  cmd_string = cmd.join(' ')

  quilt = fabrics.find { |q| q.match? cmd_string }
  quilt ||= default

  output, process = Open3.capture2e(cmd_string)
  print quilt.transform output

  exit process.exitstatus
else
  $stdout << default.transform($stdin.readline) until $stdin.eof?
end
