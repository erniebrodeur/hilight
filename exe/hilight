#!/usr/bin/env ruby

require "hilight"
require 'term/ansicolor'
require 'oj'

Match = Struct.new :regexp, :replacement
Group = Struct.new :cmd, :matches
Groups = Struct.new :group

Match.define_method(:output) do |string|
  # map our colors in to the matches
  regexp.names.map { |n| replacement.gsub!("\\k<#{n}>") { |s| Term::ANSIColor.color(n, s) } }
  # map our string into the output
  string.gsub!(regexp, replacement)
end

Group.define_method(:output) do
  stdout = `#{cmd} #{ARGV[1..-1].join(' ')}`
  matches.each { |match| match.output(stdout) }

  stdout
end

rspec = Group['rspec',
              [
                Match[/(?<green>\d+) examples, (?<red>\d+) failures, (?<yellow>\d+) pending/, '\k<green> examples, \k<red> failures, \k<yellow> pending'],
                Match[/(?<blue>\d+\.\d+)/, '\k<blue>'],
                Match[/\"(?<green>.*?)\"|\'(?<green>.*?)\'/, '\k<green>'],
                Match[/# (?<red>.*):(?<yellow>\d+)/, '\k<red>:\k<yellow>']
              ]
             ]

git = Group['git', [Match[/(?<green>'.*')|(?<blue>".*")/, '\k<green>\k<blue>']]]

# require 'pry'; binding.pry

puts git.output if ARGV[0] == 'git'
puts rspec.output if ARGV[0] == 'rspec'

# %r{(?<red>\(?<blue>\d+\/\d+\))|(?<green>\d+%)|(?<blue>\d+\.\d+)|(?<yellow>[[:xdigit:]]{7})|To (?<magenta>.*)}
